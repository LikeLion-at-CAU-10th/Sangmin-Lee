*{
    box-sizing: border-box;
}

body{
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    margin: 0;
    /* vh ; 1vh=보이는 웹페이지 화면 높이값의 1% / 반응형으로 할때 자주사용 */
    /* 100vh면 전체 화면 높이의 100%, 즉 보이는 화면 전체 높이 의미. + flex를 이용해 정중앙 배치 */
    height: 100vh;
}

.label{
    display: flex ;
    align-items: center;
    justify-content: space-evenly;
    width: 50px;
    height: 26px;
    background-color: #111;
    border-radius: 50px;
    /*  */
    transform: scale(1.5);
    /* 부모 ; 자식은 부모 범위 안에서 이동가능 */
    position: relative;
}

.ball{
    /* 자식 ; 부모 포지션 안에서 움직임*/
    position: absolute;
    background-color: #fff;
    border-radius: 50%;
    width: 22px;
    height: 22px;
    top: 2px;
    left: 2px;
    /* 움직임 컨트롤 */
    transition: transform 0.2s ease-out;
}
/* js로 html, css 컨트롤 */
/* 다크모드, 라이트모드일 때 나눠서 */
body.dark{
    background-color: #292c35;
}
body.dark p {
    color: #fff;
}

/* :checked는 체크가 된다면 이란 의미 ; css에서 가정 의미*/
/* + (부모자식 컨트롤 할 수 있는 연산자 중 하나 ; 구글링필요);  첫번째 자식 컨트롤 ;; label 클래스의 ball 클래스*/
.checkbox:checked + .label .ball{
    transform: translateX(24px);
}

.checkbox{
    /* 얘도 자식포지션으로 올림. */
    position: absolute;
    /* 투명도 */
    opacity: 0;
}

.fa-moon{
    color: #f1c40f;
}

.fa-sun{
    color: #f39c12;
}